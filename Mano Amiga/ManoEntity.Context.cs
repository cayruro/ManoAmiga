//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mano_Amiga
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Mano_AmigaEntities1 : DbContext
    {
        public Mano_AmigaEntities1()
            : base("name=Mano_AmigaEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Articulo> Articulo { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Donacion> Donacion { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int sp_insertarArticulo(Nullable<int> id_categoria, Nullable<int> id_donante, string foto, string descripcion, Nullable<System.DateTime> fechaDonacion, string nombre_articulo)
        {
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var id_donanteParameter = id_donante.HasValue ?
                new ObjectParameter("id_donante", id_donante) :
                new ObjectParameter("id_donante", typeof(int));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaDonacionParameter = fechaDonacion.HasValue ?
                new ObjectParameter("FechaDonacion", fechaDonacion) :
                new ObjectParameter("FechaDonacion", typeof(System.DateTime));
    
            var nombre_articuloParameter = nombre_articulo != null ?
                new ObjectParameter("nombre_articulo", nombre_articulo) :
                new ObjectParameter("nombre_articulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarArticulo", id_categoriaParameter, id_donanteParameter, fotoParameter, descripcionParameter, fechaDonacionParameter, nombre_articuloParameter);
        }
    
        public virtual int sp_insertarUsuario(string usuario, string contraseña, string nombre, string apellido, string localidad, string dNI, Nullable<int> telefono, string correo)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("localidad", localidad) :
                new ObjectParameter("localidad", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarUsuario", usuarioParameter, contraseñaParameter, nombreParameter, apellidoParameter, localidadParameter, dNIParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int sp_login(string user, string password, ObjectParameter salida, ObjectParameter id_Usuario)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", userParameter, passwordParameter, salida, id_Usuario);
        }
    }
}
